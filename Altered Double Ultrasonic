/*
*  References:
*     Ultrasonic Sensor HC-SR04 and Arduino Tutorial
*     by Dejan Nedelkovski,
*     https://howtomechatronics.com/tutorials/arduino/ultrasonic-sensor-hc-sr04/
*
*     Multiple Ultrasonic Sensor With Arduino
*     by Syed Zain Nasir,
*     https://www.theengineeringprojects.com/2015/02/interfacing-multiple-ultrasonic-sensor-arduino.html
*/


#include <Servo.h>                           // Include servo library
int servoPin1 = 12; //Right
int servoPin2 = 13; //Left
Servo servoLeft;                             // Declare left and right servos
Servo servoRight;
 
// defines pins numbers where sensor is attached
const int trigPinLEFT = 5;
const int echoPinLEFT = 6;
const int trigPinRIGHT = 9;
const int echoPinRIGHT = 10;

// defines variables
long duration, distance, distanceLEFT, distanceRIGHT;
int j, k;

void setup() 
{
  pinMode(trigPinLEFT, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPinLEFT, INPUT); // Sets the echoPin as an Input
  pinMode(trigPinRIGHT, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPinRIGHT, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600); // Starts the serial communication
}

void loop() 
{
  SonarSensor(trigPinLEFT, echoPinLEFT);
  distanceLEFT = distance;
  
  servoRight.attach(servoPin1);  // Attach right signal to pin 12
  servoLeft.attach(servoPin2);   // Attach left signal to pin 13
  
  SonarSensor(trigPinRIGHT, echoPinRIGHT);
  distanceRIGHT = distance;
  /*
  //Prints the distance on the Serial Monitor 
  Serial.print("DistanceRIGHT: ");
  Serial.println(distanceRIGHT);
  Serial.print("DistanceLEFT: ");
  Serial.println(distanceLEFT);
  */

  while ((distanceLEFT < 40) || (distanceRIGHT < 40)){
    WallFollower();
  }
 }
 

void SonarSensor(int trigPin,int echoPin)
{
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration*0.034/2;
  //distance = (duration/2) / 29.1;

}

void WallFollower()
{
  delay(10);
  SonarSensor(trigPinLEFT, echoPinLEFT);
  distanceLEFT = distance;
  SonarSensor(trigPinRIGHT, echoPinRIGHT);
  distanceRIGHT = distance;
  servoRight.write(0);
  servoLeft.write(180);

  if ((distanceLEFT > 10) && (distanceRIGHT < 10)){ // Turns Left in a corner
    delay(100);
    servoLeft.writeMicroseconds(1400);         // Left wheel clockwise
    servoRight.writeMicroseconds(1400);        // Right wheel anticlockwise
    delay(500);
  }
  else if ((distanceLEFT < 10) && (distanceRIGHT > 10)){ // Turns right in a corner
    delay(100);
    servoRight.writeMicroseconds(1600);         // Right wheel clockwise
    servoLeft.writeMicroseconds(1600);          // Left wheel anticlockwise
    delay(500);
  }
  else if ((distanceLEFT < 9) && (distanceRIGHT > 9)){ // Continue straight on
    servoLeft.writeMicroseconds(1700);
    servoRight.writeMicroseconds(1700);
  }
  /*else if (distanceLEFT < '7') {
    servoLeft.write(180);
    servoRight.write(90);
  } else if (distanceRIGHT < '7') {
    servoLeft.write(90);
    servoRight.write(0);
  }*/
}
